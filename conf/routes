# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
#Front-End

GET     /                           controllers.Application.index
#GET     /                      controllers.Application.indexSign(any = "none")


# Play routes serving HTML to AngularJS start with /views
GET      /views/*any            controllers.Application.loadPublicHTML(any)

#Mapeo de recursos del directorio /public (front-end)
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

#AUTENTICACIÃ“N

GET     /profile                    controllers.Application.profile

GET     /login                      controllers.Application.login
POST    /login                      controllers.Application.doLogin

GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET     /signup                     controllers.Application.signup
POST    /signup                     controllers.Application.doSignup

GET     /accounts/unverified        controllers.Signup.unverified
GET     /authenticate/:provider/denied     controllers.Signup.oAuthDenied(provider: String)

GET     /accounts/verify/:token     controllers.Signup.verify(token: String)
GET     /accounts/exists            controllers.Signup.exists

GET     /accounts/password/reset/:token     controllers.Signup.resetPassword(token: String)
POST    /accounts/password/reset            controllers.Signup.doResetPassword

GET    /accounts/password/change    controllers.Account.changePassword
POST   /accounts/password/change    controllers.Account.doChangePassword

GET     /accounts/verify            controllers.Account.verifyEmail

GET     /accounts/add               controllers.Account.link

GET     /accounts/link              controllers.Account.askLink
POST    /accounts/link              controllers.Account.doLink

GET     /accounts/merge             controllers.Account.askMerge
POST    /accounts/merge             controllers.Account.doMerge

GET     /login/password/forgot     controllers.Signup.forgotPassword(email: String ?= "")
POST    /login/password/forgot     controllers.Signup.doForgotPassword


# UsuarioController

GET     /api/usuarios                   controllers.UsuarioController.getUsuarios
GET     /api/usuarios/:id               controllers.UsuarioController.getUsuario(id: Long)
PUT     /api/usuarios/:id               controllers.UsuarioController.updateUsuario(id: Long)
DELETE  /api/usuarios/:id               controllers.UsuarioController.deleteUsuario(id: Long)
POST    /api/campos/:id/usuarios        controllers.UsuarioController.createUsuario(id: Long)


#RegionController

GET     /api/regiones                   controllers.RegionController.getRegiones
GET     /api/regiones/:id               controllers.RegionController.getRegion(id: Long)
PUT     /api/regiones/:id               controllers.RegionController.updateRegion(id: Long)
DELETE  /api/regiones/:id               controllers.RegionController.deleteRegion(id: Long)
POST    /api/regiones                   controllers.RegionController.createRegion()

#CampoController

GET     /api/campos                   controllers.CampoController.getCampos(periodo: String ?="noVal")
GET     /api/campos/:id               controllers.CampoController.getCampo(id: Long, periodo: String ?="noVal")
PUT     /api/campos/:id               controllers.CampoController.updateCampo(id: Long)
DELETE  /api/campos/:id               controllers.CampoController.deleteCampo(id: Long)
POST    /api/regiones/:id/campos      controllers.CampoController.createCampo(id: Long)

#PozoController

GET     /api/pozos                   controllers.PozoController.getPozos(periodo:String ?= "noVal")
GET     /api/pozos/:id               controllers.PozoController.getPozo(id: Long, periodo:String ?= "noVal")
PUT     /api/pozos/:id               controllers.PozoController.updatePozo(id: Long)
DELETE  /api/pozos/:id               controllers.PozoController.deletePozo(id: Long)
POST    /api/campos/:id/pozos        controllers.PozoController.createPozo(id: Long)

#SensorController

GET     /api/sensores                controllers.SensorController.getSensores
GET     /api/sensores/:id            controllers.SensorController.getSensor(id: Long)
GET     /api/mediciones              controllers.SensorController.getMedidas
GET     /api/sensores/:id/mediciones controllers.SensorController.getMedidasSensor(id: Long)
PUT     /api/sensores/:id            controllers.SensorController.updateSensor(id: Long)
PUT     /api/sensores/mediciones/:id controllers.SensorController.updateMedicion(id: Long)
DELETE  /api/sensores/:id            controllers.SensorController.deleteSensor(id: Long)
DELETE  /api/sensores/mediciones/:id controllers.SensorController.deleteMedida(id: Long)
POST    /api/pozos/:id/sensores                controllers.SensorController.createSensor(id: Long)
POST    /api/sensores/:id/mediciones controllers.SensorController.addMedida(id: Long)


#EmergenciaController

POST     /api/sensores/:id/emergencia   controllers.EmergenciaController.addEmergencia(id: Long)


# Redirect all unknown routes to the indexSign page
GET      /*any                  controllers.Application.indexSign(any)
